---
--- Generated by Luanalysis
--- Created by olivi.
--- DateTime: 09/02/2023 18:29
---

function SpawnVehicle()
    local playerPed = PlayerPedId()
    RageUI.CloseAll()
    local menuSP = RageUI.CreateMenu("Categories", "Menu Categories")
    RageUI.Visible(menuSP, not RageUI.Visible(menuSP))
    while menuSP do
        Citizen.Wait(0)
        RageUI.IsVisible(menuSP, true, true, true, function()
            for k,v in ipairs(CategoriesVehicule) do
                RageUI.ButtonWithStyle(v.label, nil, {RightLabel = "→"}, true, function(Hovered, Active, Selected)
                    if Selected then
                        if v.value == 'boat' then
                            Boat()
                        elseif v.value == 'commercial' then
                            Commercial()
                        elseif v.value == 'compacts' then
                            Compacts()
                        elseif v.value == 'coupes' then
                            Coupes()
                        elseif v.value == 'cycles' then
                            Cycles()
                        elseif v.value == 'emergency' then
                            Emergency()
                        elseif v.value == 'helicopters' then
                            Helicopters()
                        elseif v.value == 'industrial' then
                            Industrial()
                        elseif v.value == 'military' then
                            Military()
                        elseif v.value == 'motorcycles' then
                            Motorcycles()
                        elseif v.value == 'muscle' then
                            Muscle()
                        elseif v.value == 'offroad' then
                            OffRoad()
                        elseif v.value == 'openwheel' then
                            OpenWheel()
                        elseif v.value == 'planes' then
                            Planes()
                        elseif v.value == 'sedans' then
                            Sedans()
                        elseif v.value == 'service' then
                            Service()
                        elseif v.value == 'sports' then
                            Sport()
                        elseif v.value == 'sportsclassics' then
                            Sportsclassics()
                        elseif v.value == 'super' then
                            Super()
                        elseif v.value == 'suvs' then
                            Suvs()
                        elseif v.value == 'trailer' then
                            Trailer()
                        elseif v.value == 'trains' then
                            Trains()
                        elseif v.value == 'utility' then
                            Utility()
                        elseif v.value == 'vans' then
                            Vans()
                        end
                    end
                end)
            end
        end, function()
        end)
        if not RageUI.Visible(menuSP) then
            menuSP = RMenu:DeleteType("menuSP", true)
        end
    end
end

function Boat()
    local playerPed = PlayerPedId()
    RageUI.CloseAll()
    local menuBoat = RageUI.CreateMenu("Bateau", "Menu Bateau")
    RageUI.Visible(menuBoat, not RageUI.Visible(menuBoat))
    while menuBoat do
        Citizen.Wait(0)
        RageUI.IsVisible(menuBoat, true, true, true, function()
            for k,v in ipairs(CategorieBoat) do
                RageUI.ButtonWithStyle(v.label, nil, {RightLabel = "→"}, true, function(Hovered, Active, Selected)
                    if Selected then
                        local playerPed = PlayerPedId()
                        local coords = GetEntityCoords(playerPed)
                        local vehicle = GetHashKey(v.hash)
                        RequestModel(vehicle)
                        while not HasModelLoaded(vehicle) do
                            Citizen.Wait(0)
                        end
                        local veh = CreateVehicle(vehicle, coords.x+5.0, coords.y, coords.z, GetEntityHeading(playerPed), true, false)
                        SetEntityAsMissionEntity(veh, true, true)
                    end
                end)
            end
        end, function()
        end)
        if not RageUI.Visible(menuBoat) then
            menuBoat = RMenu:DeleteType("menuBoat", true)
        end
    end
end

function Commercial()
    local playerPed = PlayerPedId()
    RageUI.CloseAll()
    local menuCommercial = RageUI.CreateMenu("Commercial", "Menu Commercial")
    RageUI.Visible(menuCommercial, not RageUI.Visible(menuCommercial))
    while menuCommercial do
        Citizen.Wait(0)
        RageUI.IsVisible(menuCommercial, true, true, true, function()
            for k,v in ipairs(CategorieCommercial) do
                RageUI.ButtonWithStyle(v.label, nil, {RightLabel = "→"}, true, function(Hovered, Active, Selected)
                    if Selected then
                        local playerPed = PlayerPedId()
                        local coords = GetEntityCoords(playerPed)
                        local vehicle = GetHashKey(v.hash)
                        RequestModel(vehicle)
                        while not HasModelLoaded(vehicle) do
                            Citizen.Wait(0)
                        end
                        local veh = CreateVehicle(vehicle, coords.x+5.0, coords.y, coords.z, GetEntityHeading(playerPed), true, false)
                        SetEntityAsMissionEntity(veh, true, true)
                    end
                end)
            end
        end, function()
        end)
        if not RageUI.Visible(menuCommercial) then
            menuCommercial = RMenu:DeleteType("menuCommercial", true)
        end
    end
end

function Compacts()
    local playerPed = PlayerPedId()
    RageUI.CloseAll()
    local menuCompacts = RageUI.CreateMenu("Compacts", "Menu Compacts")
    RageUI.Visible(menuCompacts, not RageUI.Visible(menuCompacts))
    while menuCompacts do
        Citizen.Wait(0)
        RageUI.IsVisible(menuCompacts, true, true, true, function()
            for k,v in ipairs(CategorieCompacts) do
                RageUI.ButtonWithStyle(v.label, nil, {RightLabel = "→"}, true, function(Hovered, Active, Selected)
                    if Selected then
                        local playerPed = PlayerPedId()
                        local coords = GetEntityCoords(playerPed)
                        local vehicle = GetHashKey(v.hash)
                        RequestModel(vehicle)
                        while not HasModelLoaded(vehicle) do
                            Citizen.Wait(0)
                        end
                        local veh = CreateVehicle(vehicle, coords.x+5.0, coords.y, coords.z, GetEntityHeading(playerPed), true, false)
                        SetEntityAsMissionEntity(veh, true, true)
                    end
                end)
            end
        end, function()
        end)
        if not RageUI.Visible(menuCompacts) then
            menuCompacts = RMenu:DeleteType("menuCompacts", true)
        end
    end
end

function Coupes()
    local playerPed = PlayerPedId()
    RageUI.CloseAll()
    local menuCoupes = RageUI.CreateMenu("Coupes", "Menu Coupes")
    RageUI.Visible(menuCoupes, not RageUI.Visible(menuCoupes))
    while menuCoupes do
        Citizen.Wait(0)
        RageUI.IsVisible(menuCoupes, true, true, true, function()
            for k,v in ipairs(CategorieCoupes) do
                RageUI.ButtonWithStyle(v.label, nil, {RightLabel = "→"}, true, function(Hovered, Active, Selected)
                    if Selected then
                        local playerPed = PlayerPedId()
                        local coords = GetEntityCoords(playerPed)
                        local vehicle = GetHashKey(v.hash)
                        RequestModel(vehicle)
                        while not HasModelLoaded(vehicle) do
                            Citizen.Wait(0)
                        end
                        local veh = CreateVehicle(vehicle, coords.x+5.0, coords.y, coords.z, GetEntityHeading(playerPed), true, false)
                        SetEntityAsMissionEntity(veh, true, true)
                    end
                end)
            end
        end, function()
        end)
        if not RageUI.Visible(menuCoupes) then
            menuCoupes = RMenu:DeleteType("menuCoupes", true)
        end
    end
end

function Cycles()
    local playerPed = PlayerPedId()
    RageUI.CloseAll()
    local menuCycles = RageUI.CreateMenu("Cycles", "Menu Cycles")
    RageUI.Visible(menuCycles, not RageUI.Visible(menuCycles))
    while menuCycles do
        Citizen.Wait(0)
        RageUI.IsVisible(menuCycles, true, true, true, function()
            for k,v in ipairs(CategorieCycles) do
                RageUI.ButtonWithStyle(v.label, nil, {RightLabel = "→"}, true, function(Hovered, Active, Selected)
                    if Selected then
                        local playerPed = PlayerPedId()
                        local coords = GetEntityCoords(playerPed)
                        local vehicle = GetHashKey(v.hash)
                        RequestModel(vehicle)
                        while not HasModelLoaded(vehicle) do
                            Citizen.Wait(0)
                        end
                        local veh = CreateVehicle(vehicle, coords.x+5.0, coords.y, coords.z, GetEntityHeading(playerPed), true, false)
                        SetEntityAsMissionEntity(veh, true, true)
                    end
                end)
            end
        end, function()
        end)
        if not RageUI.Visible(menuCycles) then
            menuCycles = RMenu:DeleteType("menuCycles", true)
        end
    end
end

function Emergency()
    local playerPed = PlayerPedId()
    RageUI.CloseAll()
    local menuEmergency = RageUI.CreateMenu("Emergency", "Menu Emergency")
    RageUI.Visible(menuEmergency, not RageUI.Visible(menuEmergency))
    while menuEmergency do
        Citizen.Wait(0)
        RageUI.IsVisible(menuEmergency, true, true, true, function()
            for k,v in ipairs(CategorieEmergency) do
                RageUI.ButtonWithStyle(v.label, nil, {RightLabel = "→"}, true, function(Hovered, Active, Selected)
                    if Selected then
                        local playerPed = PlayerPedId()
                        local coords = GetEntityCoords(playerPed)
                        local vehicle = GetHashKey(v.hash)
                        RequestModel(vehicle)
                        while not HasModelLoaded(vehicle) do
                            Citizen.Wait(0)
                        end
                        local veh = CreateVehicle(vehicle, coords.x+5.0, coords.y, coords.z, GetEntityHeading(playerPed), true, false)
                        SetEntityAsMissionEntity(veh, true, true)
                    end
                end)
            end
        end, function()
        end)
        if not RageUI.Visible(menuEmergency) then
            menuEmergency = RMenu:DeleteType("menuEmergency", true)
        end
    end
end

function Helicopters()
    local playerPed = PlayerPedId()
    RageUI.CloseAll()
    local menuHelicopters = RageUI.CreateMenu("Helicopters", "Menu Helicopters")
    RageUI.Visible(menuHelicopters, not RageUI.Visible(menuHelicopters))
    while menuHelicopters do
        Citizen.Wait(0)
        RageUI.IsVisible(menuHelicopters, true, true, true, function()
            for k,v in ipairs(CategorieHelicopters) do
                RageUI.ButtonWithStyle(v.label, nil, {RightLabel = "→"}, true, function(Hovered, Active, Selected)
                    if Selected then
                        local playerPed = PlayerPedId()
                        local coords = GetEntityCoords(playerPed)
                        local vehicle = GetHashKey(v.hash)
                        RequestModel(vehicle)
                        while not HasModelLoaded(vehicle) do
                            Citizen.Wait(0)
                        end
                        local veh = CreateVehicle(vehicle, coords.x+5.0, coords.y, coords.z, GetEntityHeading(playerPed), true, false)
                        SetEntityAsMissionEntity(veh, true, true)
                    end
                end)
            end
        end, function()
        end)
        if not RageUI.Visible(menuHelicopters) then
            menuHelicopters = RMenu:DeleteType("menuHelicopters", true)
        end
    end
end

function Industrial()
    local playerPed = PlayerPedId()
    RageUI.CloseAll()
    local menuIndustrial = RageUI.CreateMenu("Industrial", "Menu Industrial")
    RageUI.Visible(menuIndustrial, not RageUI.Visible(menuIndustrial))
    while menuIndustrial do
        Citizen.Wait(0)
        RageUI.IsVisible(menuIndustrial, true, true, true, function()
            for k,v in ipairs(CategorieIndustrial) do
                RageUI.ButtonWithStyle(v.label, nil, {RightLabel = "→"}, true, function(Hovered, Active, Selected)
                    if Selected then
                        local playerPed = PlayerPedId()
                        local coords = GetEntityCoords(playerPed)
                        local vehicle = GetHashKey(v.hash)
                        RequestModel(vehicle)
                        while not HasModelLoaded(vehicle) do
                            Citizen.Wait(0)
                        end
                        local veh = CreateVehicle(vehicle, coords.x+5.0, coords.y, coords.z, GetEntityHeading(playerPed), true, false)
                        SetEntityAsMissionEntity(veh, true, true)
                    end
                end)
            end
        end, function()
        end)
        if not RageUI.Visible(menuIndustrial) then
            menuIndustrial = RMenu:DeleteType("menuIndustrial", true)
        end
    end
end

function Military()
    local playerPed = PlayerPedId()
    RageUI.CloseAll()
    local menuMilitary = RageUI.CreateMenu("Military", "Menu Military")
    RageUI.Visible(menuMilitary, not RageUI.Visible(menuMilitary))
    while menuMilitary do
        Citizen.Wait(0)
        RageUI.IsVisible(menuMilitary, true, true, true, function()
            for k,v in ipairs(CategorieMilitary) do
                RageUI.ButtonWithStyle(v.label, nil, {RightLabel = "→"}, true, function(Hovered, Active, Selected)
                    if Selected then
                        local playerPed = PlayerPedId()
                        local coords = GetEntityCoords(playerPed)
                        local vehicle = GetHashKey(v.hash)
                        RequestModel(vehicle)
                        while not HasModelLoaded(vehicle) do
                            Citizen.Wait(0)
                        end
                        local veh = CreateVehicle(vehicle, coords.x+5.0, coords.y, coords.z, GetEntityHeading(playerPed), true, false)
                        SetEntityAsMissionEntity(veh, true, true)
                    end
                end)
            end
        end, function()
        end)
        if not RageUI.Visible(menuMilitary) then
            menuMilitary = RMenu:DeleteType("menuMilitary", true)
        end
    end
end

function Motorcycles()
    local playerPed = PlayerPedId()
    RageUI.CloseAll()
    local menuMotorcycles = RageUI.CreateMenu("Motorcycles", "Menu Motorcycles")
    RageUI.Visible(menuMotorcycles, not RageUI.Visible(menuMotorcycles))
    while menuMotorcycles do
        Citizen.Wait(0)
        RageUI.IsVisible(menuMotorcycles, true, true, true, function()
            for k,v in ipairs(CategorieMotorcycles) do
                RageUI.ButtonWithStyle(v.label, nil, {RightLabel = "→"}, true, function(Hovered, Active, Selected)
                    if Selected then
                        local playerPed = PlayerPedId()
                        local coords = GetEntityCoords(playerPed)
                        local vehicle = GetHashKey(v.hash)
                        RequestModel(vehicle)
                        while not HasModelLoaded(vehicle) do
                            Citizen.Wait(0)
                        end
                        local veh = CreateVehicle(vehicle, coords.x+5.0, coords.y, coords.z, GetEntityHeading(playerPed), true, false)
                        SetEntityAsMissionEntity(veh, true, true)
                    end
                end)
            end
        end, function()
        end)
        if not RageUI.Visible(menuMotorcycles) then
            menuMotorcycles = RMenu:DeleteType("menuMotorcycles", true)
        end
    end
end

function Muscle()
    local playerPed = PlayerPedId()
    RageUI.CloseAll()
    local menuMuscle = RageUI.CreateMenu("Muscle", "Menu Muscle")
    RageUI.Visible(menuMuscle, not RageUI.Visible(menuMuscle))
    while menuMuscle do
        Citizen.Wait(0)
        RageUI.IsVisible(menuMuscle, true, true, true, function()
            for k,v in ipairs(CategorieMuscle) do
                RageUI.ButtonWithStyle(v.label, nil, {RightLabel = "→"}, true, function(Hovered, Active, Selected)
                    if Selected then
                        local playerPed = PlayerPedId()
                        local coords = GetEntityCoords(playerPed)
                        local vehicle = GetHashKey(v.hash)
                        RequestModel(vehicle)
                        while not HasModelLoaded(vehicle) do
                            Citizen.Wait(0)
                        end
                        local veh = CreateVehicle(vehicle, coords.x+5.0, coords.y, coords.z, GetEntityHeading(playerPed), true, false)
                        SetEntityAsMissionEntity(veh, true, true)
                    end
                end)
            end
        end, function()
        end)
        if not RageUI.Visible(menuMuscle) then
            menuMuscle = RMenu:DeleteType("menuMuscle", true)
        end
    end
end

function OffRoad()
    local playerPed = PlayerPedId()
    RageUI.CloseAll()
    local menuOffRoad = RageUI.CreateMenu("OffRoad", "Menu OffRoad")
    RageUI.Visible(menuOffRoad, not RageUI.Visible(menuOffRoad))
    while menuOffRoad do
        Citizen.Wait(0)
        RageUI.IsVisible(menuOffRoad, true, true, true, function()
            for k,v in ipairs(CategorieOffRoad) do
                RageUI.ButtonWithStyle(v.label, nil, {RightLabel = "→"}, true, function(Hovered, Active, Selected)
                    if Selected then
                        local playerPed = PlayerPedId()
                        local coords = GetEntityCoords(playerPed)
                        local vehicle = GetHashKey(v.hash)
                        RequestModel(vehicle)
                        while not HasModelLoaded(vehicle) do
                            Citizen.Wait(0)
                        end
                        local veh = CreateVehicle(vehicle, coords.x+5.0, coords.y, coords.z, GetEntityHeading(playerPed), true, false)
                        SetEntityAsMissionEntity(veh, true, true)
                    end
                end)
            end
        end, function()
        end)
        if not RageUI.Visible(menuOffRoad) then
            menuOffRoad = RMenu:DeleteType("menuOffRoad", true)
        end
    end
end

function OpenWheel()
    local playerPed = PlayerPedId()
    RageUI.CloseAll()
    local menuOpenWheel = RageUI.CreateMenu("OpenWheel", "Menu OpenWheel")
    RageUI.Visible(menuOpenWheel, not RageUI.Visible(menuOpenWheel))
    while menuOpenWheel do
        Citizen.Wait(0)
        RageUI.IsVisible(menuOpenWheel, true, true, true, function()
            for k,v in ipairs(CategorieOpenWheel) do
                RageUI.ButtonWithStyle(v.label, nil, {RightLabel = "→"}, true, function(Hovered, Active, Selected)
                    if Selected then
                        local playerPed = PlayerPedId()
                        local coords = GetEntityCoords(playerPed)
                        local vehicle = GetHashKey(v.hash)
                        RequestModel(vehicle)
                        while not HasModelLoaded(vehicle) do
                            Citizen.Wait(0)
                        end
                        local veh = CreateVehicle(vehicle, coords.x+5.0, coords.y, coords.z, GetEntityHeading(playerPed), true, false)
                        SetEntityAsMissionEntity(veh, true, true)
                    end
                end)
            end
        end, function()
        end)
        if not RageUI.Visible(menuOpenWheel) then
            menuOpenWheel = RMenu:DeleteType("menuOpenWheel", true)
        end
    end
end

function Planes()
    local playerPed = PlayerPedId()
    RageUI.CloseAll()
    local menuPlanes = RageUI.CreateMenu("Planes", "Menu Planes")
    RageUI.Visible(menuPlanes, not RageUI.Visible(menuPlanes))
    while menuPlanes do
        Citizen.Wait(0)
        RageUI.IsVisible(menuPlanes, true, true, true, function()
            for k,v in ipairs(CategoriePlanes) do
                RageUI.ButtonWithStyle(v.label, nil, {RightLabel = "→"}, true, function(Hovered, Active, Selected)
                    if Selected then
                        local playerPed = PlayerPedId()
                        local coords = GetEntityCoords(playerPed)
                        local vehicle = GetHashKey(v.hash)
                        RequestModel(vehicle)
                        while not HasModelLoaded(vehicle) do
                            Citizen.Wait(0)
                        end
                        local veh = CreateVehicle(vehicle, coords.x+5.0, coords.y, coords.z, GetEntityHeading(playerPed), true, false)
                        SetEntityAsMissionEntity(veh, true, true)
                    end
                end)
            end
        end, function()
        end)
        if not RageUI.Visible(menuPlanes) then
            menuPlanes = RMenu:DeleteType("menuPlanes", true)
        end
    end
end

function Suvs()
    local playerPed = PlayerPedId()
    RageUI.CloseAll()
    local menuSuvs = RageUI.CreateMenu("Suvs", "Menu Suvs")
    RageUI.Visible(menuSuvs, not RageUI.Visible(menuSuvs))
    while menuSuvs do
        Citizen.Wait(0)
        RageUI.IsVisible(menuSuvs, true, true, true, function()
            for k,v in ipairs(CategorieSuvs) do
                RageUI.ButtonWithStyle(v.label, nil, {RightLabel = "→"}, true, function(Hovered, Active, Selected)
                    if Selected then
                        local playerPed = PlayerPedId()
                        local coords = GetEntityCoords(playerPed)
                        local vehicle = GetHashKey(v.hash)
                        RequestModel(vehicle)
                        while not HasModelLoaded(vehicle) do
                            Citizen.Wait(0)
                        end
                        local veh = CreateVehicle(vehicle, coords.x+5.0, coords.y, coords.z, GetEntityHeading(playerPed), true, false)
                        SetEntityAsMissionEntity(veh, true, true)
                    end
                end)
            end
        end, function()
        end)
        if not RageUI.Visible(menuSuvs) then
            menuSuvs = RMenu:DeleteType("menuSuvs", true)
        end
    end
end

function Sedans()
    local playerPed = PlayerPedId()
    RageUI.CloseAll()
    local menuSedans = RageUI.CreateMenu("Sedans", "Menu Sedans")
    RageUI.Visible(menuSedans, not RageUI.Visible(menuSedans))
    while menuSedans do
        Citizen.Wait(0)
        RageUI.IsVisible(menuSedans, true, true, true, function()
            for k,v in ipairs(CategorieSedans) do
                RageUI.ButtonWithStyle(v.label, nil, {RightLabel = "→"}, true, function(Hovered, Active, Selected)
                    if Selected then
                        local playerPed = PlayerPedId()
                        local coords = GetEntityCoords(playerPed)
                        local vehicle = GetHashKey(v.hash)
                        RequestModel(vehicle)
                        while not HasModelLoaded(vehicle) do
                            Citizen.Wait(0)
                        end
                        local veh = CreateVehicle(vehicle, coords.x+5.0, coords.y, coords.z, GetEntityHeading(playerPed), true, false)
                        SetEntityAsMissionEntity(veh, true, true)
                    end
                end)
            end
        end, function()
        end)
        if not RageUI.Visible(menuSedans) then
            menuSedans = RMenu:DeleteType("menuSedans", true)
        end
    end
end

function Service()
    local playerPed = PlayerPedId()
    RageUI.CloseAll()
    local menuService = RageUI.CreateMenu("Service", "Menu Service")
    RageUI.Visible(menuService, not RageUI.Visible(menuService))
    while menuService do
        Citizen.Wait(0)
        RageUI.IsVisible(menuService, true, true, true, function()
            for k,v in ipairs(CategorieService) do
                RageUI.ButtonWithStyle(v.label, nil, {RightLabel = "→"}, true, function(Hovered, Active, Selected)
                    if Selected then
                        local playerPed = PlayerPedId()
                        local coords = GetEntityCoords(playerPed)
                        local vehicle = GetHashKey(v.hash)
                        RequestModel(vehicle)
                        while not HasModelLoaded(vehicle) do
                            Citizen.Wait(0)
                        end
                        local veh = CreateVehicle(vehicle, coords.x+5.0, coords.y, coords.z, GetEntityHeading(playerPed), true, false)
                        SetEntityAsMissionEntity(veh, true, true)
                    end
                end)
            end
        end, function()
        end)
        if not RageUI.Visible(menuService) then
            menuService = RMenu:DeleteType("menuService", true)
        end
    end
end

function Sport()
    local playerPed = PlayerPedId()
    RageUI.CloseAll()
    local menuSport = RageUI.CreateMenu("Sport", "Menu Sport")
    RageUI.Visible(menuSport, not RageUI.Visible(menuSport))
    while menuSport do
        Citizen.Wait(0)
        RageUI.IsVisible(menuSport, true, true, true, function()
            for k,v in ipairs(CategorieSport) do
                RageUI.ButtonWithStyle(v.label, nil, {RightLabel = "→"}, true, function(Hovered, Active, Selected)
                    if Selected then
                        local playerPed = PlayerPedId()
                        local coords = GetEntityCoords(playerPed)
                        local vehicle = GetHashKey(v.hash)
                        RequestModel(vehicle)
                        while not HasModelLoaded(vehicle) do
                            Citizen.Wait(0)
                        end
                        local veh = CreateVehicle(vehicle, coords.x+5.0, coords.y, coords.z, GetEntityHeading(playerPed), true, false)
                        SetEntityAsMissionEntity(veh, true, true)
                    end
                end)
            end
        end, function()
        end)
        if not RageUI.Visible(menuSport) then
            menuSport = RMenu:DeleteType("menuSport", true)
        end
    end
end

function Sportsclassics()
    local playerPed = PlayerPedId()
    RageUI.CloseAll()
    local menuSportsclassics = RageUI.CreateMenu("Sportsclassics", "Menu Sportsclassics")
    RageUI.Visible(menuSportsclassics, not RageUI.Visible(menuSportsclassics))
    while menuSportsclassics do
        Citizen.Wait(0)
        RageUI.IsVisible(menuSportsclassics, true, true, true, function()
            for k,v in ipairs(CategorieSportsclassics) do
                RageUI.ButtonWithStyle(v.label, nil, {RightLabel = "→"}, true, function(Hovered, Active, Selected)
                    if Selected then
                        local playerPed = PlayerPedId()
                        local coords = GetEntityCoords(playerPed)
                        local vehicle = GetHashKey(v.hash)
                        RequestModel(vehicle)
                        while not HasModelLoaded(vehicle) do
                            Citizen.Wait(0)
                        end
                        local veh = CreateVehicle(vehicle, coords.x+5.0, coords.y, coords.z, GetEntityHeading(playerPed), true, false)
                        SetEntityAsMissionEntity(veh, true, true)
                    end
                end)
            end
        end, function()
        end)
        if not RageUI.Visible(menuSportsclassics) then
            menuSportsclassics = RMenu:DeleteType("menuSportsclassics", true)
        end
    end
end

function Super()
    local playerPed = PlayerPedId()
    RageUI.CloseAll()
    local menuSuper = RageUI.CreateMenu("Super", "Menu Super")
    RageUI.Visible(menuSuper, not RageUI.Visible(menuSuper))
    while menuSuper do
        Citizen.Wait(0)
        RageUI.IsVisible(menuSuper, true, true, true, function()
            for k,v in ipairs(CategorieSuper) do
                RageUI.ButtonWithStyle(v.label, nil, {RightLabel = "→"}, true, function(Hovered, Active, Selected)
                    if Selected then
                        local playerPed = PlayerPedId()
                        local coords = GetEntityCoords(playerPed)
                        local vehicle = GetHashKey(v.hash)
                        RequestModel(vehicle)
                        while not HasModelLoaded(vehicle) do
                            Citizen.Wait(0)
                        end
                        local veh = CreateVehicle(vehicle, coords.x+5.0, coords.y, coords.z, GetEntityHeading(playerPed), true, false)
                        SetEntityAsMissionEntity(veh, true, true)
                    end
                end)
            end
        end, function()
        end)
        if not RageUI.Visible(menuSuper) then
            menuSuper = RMenu:DeleteType("menuSuper", true)
        end
    end
end

function Trailer()
    local playerPed = PlayerPedId()
    RageUI.CloseAll()
    local menuTrailer = RageUI.CreateMenu("Trailer", "Menu Trailer")
    RageUI.Visible(menuTrailer, not RageUI.Visible(menuTrailer))
    while menuTrailer do
        Citizen.Wait(0)
        RageUI.IsVisible(menuTrailer, true, true, true, function()
            for k,v in ipairs(CategorieTrailer) do
                RageUI.ButtonWithStyle(v.label, nil, {RightLabel = "→"}, true, function(Hovered, Active, Selected)
                    if Selected then
                        local playerPed = PlayerPedId()
                        local coords = GetEntityCoords(playerPed)
                        local vehicle = GetHashKey(v.hash)
                        RequestModel(vehicle)
                        while not HasModelLoaded(vehicle) do
                            Citizen.Wait(0)
                        end
                        local veh = CreateVehicle(vehicle, coords.x+5.0, coords.y, coords.z, GetEntityHeading(playerPed), true, false)
                        SetEntityAsMissionEntity(veh, true, true)
                    end
                end)
            end
        end, function()
        end)
        if not RageUI.Visible(menuTrailer) then
            menuTrailer = RMenu:DeleteType("menuTrailer", true)
        end
    end
end

function Trains()
    local playerPed = PlayerPedId()
    RageUI.CloseAll()
    local menuTrains = RageUI.CreateMenu("Trains", "Menu Trains")
    RageUI.Visible(menuTrains, not RageUI.Visible(menuTrains))
    while menuTrains do
        Citizen.Wait(0)
        RageUI.IsVisible(menuTrains, true, true, true, function()
            for k,v in ipairs(CategorieTrains) do
                RageUI.ButtonWithStyle(v.label, nil, {RightLabel = "→"}, true, function(Hovered, Active, Selected)
                    if Selected then
                        local playerPed = PlayerPedId()
                        local coords = GetEntityCoords(playerPed)
                        local vehicle = GetHashKey(v.hash)
                        RequestModel(vehicle)
                        while not HasModelLoaded(vehicle) do
                            Citizen.Wait(0)
                        end
                        local veh = CreateVehicle(vehicle, coords.x+5.0, coords.y, coords.z, GetEntityHeading(playerPed), true, false)
                        SetEntityAsMissionEntity(veh, true, true)
                    end
                end)
            end
        end, function()
        end)
        if not RageUI.Visible(menuTrains) then
            menuTrains = RMenu:DeleteType("menuTrains", true)
        end
    end
end

function Utility()
    local playerPed = PlayerPedId()
    RageUI.CloseAll()
    local menuUtility = RageUI.CreateMenu("Utility", "Menu Utility")
    RageUI.Visible(menuUtility, not RageUI.Visible(menuUtility))
    while menuUtility do
        Citizen.Wait(0)
        RageUI.IsVisible(menuUtility, true, true, true, function()
            for k,v in ipairs(CategorieUtility) do
                RageUI.ButtonWithStyle(v.label, nil, {RightLabel = "→"}, true, function(Hovered, Active, Selected)
                    if Selected then
                        local playerPed = PlayerPedId()
                        local coords = GetEntityCoords(playerPed)
                        local vehicle = GetHashKey(v.hash)
                        RequestModel(vehicle)
                        while not HasModelLoaded(vehicle) do
                            Citizen.Wait(0)
                        end
                        local veh = CreateVehicle(vehicle, coords.x+5.0, coords.y, coords.z, GetEntityHeading(playerPed), true, false)
                        SetEntityAsMissionEntity(veh, true, true)
                    end
                end)
            end
        end, function()
        end)
        if not RageUI.Visible(menuUtility) then
            menuUtility = RMenu:DeleteType("menuUtility", true)
        end
    end
end

function Vans()
    local playerPed = PlayerPedId()
    RageUI.CloseAll()
    local menuVans = RageUI.CreateMenu("Vans", "Menu Vans")
    RageUI.Visible(menuVans, not RageUI.Visible(menuVans))
    while menuVans do
        Citizen.Wait(0)
        RageUI.IsVisible(menuVans, true, true, true, function()
            for k,v in ipairs(CategorieVans) do
                RageUI.ButtonWithStyle(v.label, nil, {RightLabel = "→"}, true, function(Hovered, Active, Selected)
                    if Selected then
                        local playerPed = PlayerPedId()
                        local coords = GetEntityCoords(playerPed)
                        local vehicle = GetHashKey(v.hash)
                        RequestModel(vehicle)
                        while not HasModelLoaded(vehicle) do
                            Citizen.Wait(0)
                        end
                        local veh = CreateVehicle(vehicle, coords.x+5.0, coords.y, coords.z, GetEntityHeading(playerPed), true, false)
                        SetEntityAsMissionEntity(veh, true, true)
                    end
                end)
            end
        end, function()
        end)
        if not RageUI.Visible(menuVans) then
            menuVans = RMenu:DeleteType("menuVans", true)
        end
    end
end